<?xml version="1.0" encoding="utf-8"?>
<js:knimeNode xmlns:js="http://knime.org/dynamicjsnode/v2.12" 
		xmlns="http://knime.org/dynamicnode/v2.12"
		xmlns:n="http://knime.org/node/v2.12"
 		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
 		xsi:schemaLocation="http://knime.org/dynamicjsnode/v2.12 ../../../org.knime.dynamic.js/dynamicJSNode_v2.12.xsd" 
 		jsNamespace="barchart_namespace" nodeID="barchartJS" categoryPath="/labs/quickform/view"
 		icon="../js.png" type="Visualizer">
 		
 	<name>Bar Chart</name>
    <shortDescription>This node provides a view with a Bar Chart implemented with D3.js.</shortDescription>
    <fullDescription>
	    <intro>
    	     The categories and values can be selected from the input table.
    	</intro>
    	<tab name="Options">
    		    	<options>
    		<!-- Not sure this should be StringValue -->
   	   	    <columnSelectorOption name="Category Column" id="cat" inPortIndex="0" 
    	    	label="Category Column" filterClasses="org.knime.core.data.NominalValue">
    			Select the column that contains the category values.
    		</columnSelectorOption>
 
 			<!-- These should be numeric? -->
 			<!-- but no filterClasses="org.knime.core.data.DoubleValue" option -->
    		<columnFilterOption name="Select frequency columns" id="freq" 
    			inPortIndex="0" label="Frequency Columns">
    			Select the columns with frequencies for which you wish to plot bars.
    		</columnFilterOption>
   		    		
    	</options>
    	</tab>
    	<tab name="General Plot Options">
    	<options>
    	<stringOption name="Title" id="title" label="Title" defaultValue="Title of Graph" optional="true">
    			The chart title.
    		</stringOption>

    		<stringOption name="catLabel" id="catLabel" label="Category-axis label" optional="true" 
    			defaultValue="Category-axis label">
    			The label used for the category axis.
    		</stringOption>
    		 
    		<stringOption name="freqLabel" id="freqLabel" label="Frequency-axis label" optional="true"
    			defaultValue="Frequency-axis label">
    			The label used for the frequency axis.
    		</stringOption>

    		<checkBoxOption name="Horizontal bars" id="horizontal" 
    			label="Plot horizontal bar chart" defaultValue="false">
    			Check to plot the bar chart horizontally. By default bar chart is plotted vertically.
    		</checkBoxOption>

			<integerOption name="Image width (in pixels)" id="width" 
				label="Image width (in pixels)" defaultValue="800" minValue="1" maxValue="20000">
				Image width (in pixels)</integerOption>
				
			<integerOption name="Image height (in pixels)" id="height" 
				label="Image height (in pixels)"  defaultValue="600" minValue="1" maxValue="20000">
				Image height (in pixels)</integerOption>
				
    		<!-- Use a color selector to choose bar colors? -->
    		<colorOption name="bar color" id="barColor" label="Bar color" format="HexString" 
    			defaultR="255" defaultG="0" defaultB="0"></colorOption>
    		
    		</options>
    	</tab>

    </fullDescription>
    <outputOptions>
    	<dataOutputOption outPortIndex="0" id="chartImage" />
    	<dataOutputOption outPortIndex="1" id="selection" inPortIndex="0" additionalColumnName="selections" 
    			additionalColumnType="STRING"/>
    </outputOptions>
    <interactiveView name="D3 Bar chart">
    	A D3.js implementation of a Bar Chart.
    </interactiveView>
    <ports>
    	<inPort portType="Data" name="Autocomplete Options" index="0">
    		Data table containing the categories and values to be plotted in a bar chart.
    	</inPort>
    	<outPort portType="Image" name="Bar chart image" index="0">
    		SVG image of the bar chart.
    	</outPort>
    	<outPort portType="Data" name="Entered String" index="1">
    		Data table with no function yet...
    	</outPort>
    </ports>
    <js:resources>
		<js:resource type="js" path="barchart.js" />
		<js:resource type="css" path="sample.css" />
	</js:resources>
	<js:dependencies>
		<js:dependency name="D3" path="D3_3.2.8" type="local" />
		<js:dependency name="jQuery" path="jQuery_1.11.0" type="local" />
	</js:dependencies>
</js:knimeNode>